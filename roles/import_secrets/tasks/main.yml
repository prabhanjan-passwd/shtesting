- name: Start block

  block:

    - name: Check whether the secrets export file for the old organization exists
      ansible.builtin.stat:
        path: "/tmp/{{ source_organization_name }}_{{ organization_id }}.json"
      register: secrets_export_output

    - name: Ensure that the secrets export file exists 
      ansible.builtin.assert:
        that:
          - secrets_export_output.stat.exists | bool == true

    # We need the PK of the organizations from the database, not the org id displayed in the UI.
    # Retrieve the new organizaiton id just for renaming purposes.
    - name: Retrieve the new organization id
      ansible.builtin.uri:
        url: "https://{{ aap_hostname }}/api/gateway/v1/organizations/?name={{ target_organization_name }}"
        force_basic_auth: true
        url_username: "{{ aap_username }}"
        url_password: "{{ aap_password }}"
        validate_certs: "{{ aap_validate_certs }}"
      register: target_organization_output
      no_log: "{{ secure_logging }}"

    - name: Set a fact for the target organization id
      ansible.builtin.set_fact:
        target_organization_id: "{{ target_organization_output.json.results.0.id }}"

    - name: Retrieve the new organization's primary key
      ansible.builtin.command: >
        podman exec {{ aap_25_controller_container_name }} /tmp/{{ list_organizations_script_name }} | egrep {{ target_organization_name }} | awk {'print $1'}
      register: list_organizations_output 

    - name: Ensure the primary key is obtained
      ansible.builtin.assert:
        that:
          - list_organizations_output.stdout != ""

    - name: Set a fact for the new organization's primary key
      ansible.builtin.set_fact:
        target_organization_primary_key: "{{ list_organizations_output.stdout }}"

    - name: Substitute the new organization id for the old new organization id
      ansible.builtin.replace:
        path: "/tmp/{{ source_organization_name }}_{{ organization_id }}.json"
        regexp: '"id": "{{ organization_id }}"'
        replace: '"id": "{{ target_organization_primary_key }}"'
        #backup: true

    - name: Substitute the new organization name for the old new organization name
      ansible.builtin.replace:
        path: "/tmp/{{ source_organization_name }}_{{ organization_id }}.json"
        regexp: '"name": "{{ source_organization_name }}"'
        replace: '"name": "{{ target_organization_name }}"'
        #backup: true

    #- meta: end_play

    - name: Rename the export file
      ansible.builtin.command: >
        mv /tmp/{{ source_organization_name }}_{{ organization_id }}.json /tmp/{{ target_organization_name }}_{{ target_organization_id }}.json

    - name: Copy the export file into the 2.5 container
      ansible.builtin.command: >
        podman cp /tmp/{{ target_organization_name }}_{{ target_organization_id }}.json {{ aap_25_controller_container_name }}:/tmp/{{ target_organization_name }}_{{ target_organization_id }}.json

    - name: Import the credentials into the 2.5 container
      ansible.builtin.command: >
        podman exec {{ aap_25_controller_container_name }} awx-manage aapCreds --quiet --import --import-file=/tmp/{{ target_organization_name }}_{{ target_organization_id }}.json

  always:

    - name: Remove the export file from the 2.5 container
      ansible.builtin.command: >
        podman exec {{ aap_25_controller_container_name }} rm /tmp/{{ target_organization_name }}_{{ target_organization_id }}.json

    - name: Remove the export file
      ansible.builtin.file:
        path: "/tmp/{{ target_organization_name }}_{{ target_organization_id }}.json"
        state: absent
